#! /usr/bin/env python
from sys import stdout, exit, argv
from bbpgsql.option_parser import archivewal_parse_args
from bbpgsql.option_parser import archivewal_validate_options_and_args
from bbpgsql.configuration import get_config_from_filename
from bbpgsql.archive_wal import commit_wal_to_repository
from bbpgsql.configuration.repository import (
    get_WAL_repository
)
from os.path import basename

#PYINSTALLER KLUDGES
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email.mime.text import MIMEText

MIMEMultipart
MIMEBase
MIMEText


def archivewal_handle_args():
    parser, options, args = archivewal_parse_args()

    try:
        archivewal_validate_options_and_args(options, args)
    except Exception, e:
        stdout.write(str(e) + '\n')
        parser.print_help()
        exit(1)
    return options, args

def archivewal_main():
    options, args = archivewal_handle_args()

    wal_filename_to_archive = args[0]

    conf = get_config_from_filename(options.config_file)

    repository = get_WAL_repository(conf)

    wal_commit = commit_wal_to_repository(repository, wal_filename_to_archive)

CMD_DISPATCH_MAP = {
    'archivewal' : archivewal_main,
}

if __name__ == '__main__':
    cmd_name = basename(argv[0])
    if cmd_name in CMD_DISPATCH_MAP:
        CMD_DISPATCH_MAP[cmd_name]()
    else:
        stdout.write('Unknown command: {0}\n'.format(cmd_name))
        exit(1)

